#include "stdafx.h"

c_letter_8 holy_font::pixel_font[] =
{
c_letter_8(
1,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0)
), //!
c_letter_8(
3,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 1, 0, 0, 0, 0, 0),
bit_mask(1, 0, 1, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0)
), //"
c_letter_8(
5,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 1, 0, 0, 0, 0),
bit_mask(1, 1, 1, 1, 1, 0, 0, 0),
bit_mask(0, 1, 0, 1, 0, 0, 0, 0),
bit_mask(1, 1, 1, 1, 1, 0, 0, 0),
bit_mask(0, 1, 0, 1, 0, 0, 0, 0)
), //#
c_letter_8(
5,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 1, 0, 0, 0, 0, 0),
bit_mask(0, 1, 1, 1, 1, 0, 0, 0),
bit_mask(1, 0, 1, 0, 0, 0, 0, 0),
bit_mask(0, 1, 1, 1, 0, 0, 0, 0),
bit_mask(0, 0, 1, 0, 1, 0, 0, 0),
bit_mask(1, 1, 1, 1, 0, 0, 0, 0)
), //$
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(0, 0, 1, 0, 0, 0, 0, 0),
bit_mask(0, 0, 1, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0)
), //%
c_letter_8(
5,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 1, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 1, 1, 1, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(0, 1, 1, 1, 0, 0, 0, 0)
), //&
c_letter_8(
1,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0)
), //'
c_letter_8(
2,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0)
), //(
c_letter_8(
2,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0)
), //)
c_letter_8(
3,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 1, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 1, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0)
), //*
c_letter_8(
3,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0)
), //+
c_letter_8(
2,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0)
), //,
c_letter_8(
3,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0)
), //-
c_letter_8(
1,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0)
), //.
c_letter_8(
2,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0)
), // /
c_letter_8(
5,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 1, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 1, 0, 0, 0),
bit_mask(1, 0, 1, 0, 1, 0, 0, 0),
bit_mask(1, 1, 0, 0, 1, 0, 0, 0),
bit_mask(0, 1, 1, 1, 0, 0, 0, 0)
), //0 
c_letter_8(
3,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0)
), //1 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 1, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(0, 0, 1, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 1, 0, 0, 0, 0)
), //2 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 1, 0, 0, 0, 0),
bit_mask(0, 1, 1, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0)
), //3 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 1, 1, 0, 0, 0, 0),
bit_mask(0, 1, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 1, 1, 1, 0, 0, 0, 0),
bit_mask(0, 0, 0, 1, 0, 0, 0, 0)
), //4 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0)
), //5 
c_letter_8(
5,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 1, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 1, 0, 0, 0),
bit_mask(0, 1, 1, 1, 0, 0, 0, 0)
), //6 
c_letter_8(
5,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 1, 1, 0, 0, 0),
bit_mask(0, 0, 0, 1, 0, 0, 0, 0),
bit_mask(0, 1, 1, 1, 1, 0, 0, 0),
bit_mask(0, 0, 1, 0, 0, 0, 0, 0),
bit_mask(0, 0, 1, 0, 0, 0, 0, 0)
), //7 
c_letter_8(
5,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 1, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 1, 0, 0, 0),
bit_mask(0, 1, 1, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 1, 0, 0, 0),
bit_mask(0, 1, 1, 1, 0, 0, 0, 0)
), //8 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 1, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(0, 1, 1, 1, 0, 0, 0, 0),
bit_mask(0, 0, 0, 1, 0, 0, 0, 0),
bit_mask(0, 1, 1, 0, 0, 0, 0, 0)
), //9 
c_letter_8(
1,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0)
), //:
c_letter_8(
2,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0)
), //;
c_letter_8(
3,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 1, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 1, 0, 0, 0, 0, 0)
), //<
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 1, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 1, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0)
), //=
c_letter_8(
3,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 1, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0)
), //>
c_letter_8(
3,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 1, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0)
), //?
c_letter_8(
5,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 1, 1, 1, 0, 0, 0),
bit_mask(1, 0, 0, 0, 1, 0, 0, 0),
bit_mask(1, 0, 1, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 1, 1, 0, 0, 0, 0)
), //@
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 1, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 1, 1, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0)
), //a 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 1, 1, 1, 0, 0, 0, 0)
), //b 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 1, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 1, 1, 0, 0, 0, 0)
), //c 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0)
), //d 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 1, 0, 0, 0, 0)
), //e 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0)
), //f 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 1, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 1, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(0, 1, 1, 1, 0, 0, 0, 0)
), //g 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 1, 1, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0)
), //h 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0)
), //i 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 1, 1, 0, 0, 0, 0),
bit_mask(0, 0, 1, 0, 0, 0, 0, 0),
bit_mask(0, 0, 1, 0, 0, 0, 0, 0),
bit_mask(1, 0, 1, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0)
), //j 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0)
), //k 
c_letter_8(
3,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0)
), //l 
c_letter_8(
5,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 0, 1, 1, 0, 0, 0),
bit_mask(1, 0, 1, 0, 1, 0, 0, 0),
bit_mask(1, 0, 1, 0, 1, 0, 0, 0),
bit_mask(1, 0, 0, 0, 1, 0, 0, 0),
bit_mask(1, 0, 0, 0, 1, 0, 0, 0)
), //m 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 1, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 1, 1, 0, 0, 0, 0),
bit_mask(1, 0, 1, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0)
), //n 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 1, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(0, 1, 1, 0, 0, 0, 0, 0)
), //o 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0)
), //p 
c_letter_8(
6,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 1, 1, 1, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 1, 0, 0),
bit_mask(1, 0, 0, 1, 0, 1, 0, 0),
bit_mask(0, 1, 1, 1, 1, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 1, 0, 0)
), //q 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0)
), //r 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 1, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 1, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0)
), //s 
c_letter_8(
5,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 1, 1, 0, 0, 0),
bit_mask(0, 0, 1, 0, 0, 0, 0, 0),
bit_mask(0, 0, 1, 0, 0, 0, 0, 0),
bit_mask(0, 0, 1, 0, 0, 0, 0, 0),
bit_mask(0, 0, 1, 0, 0, 0, 0, 0)
), //t 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(0, 1, 1, 0, 0, 0, 0, 0)
), //u 
c_letter_8(
5,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 1, 0, 0, 0),
bit_mask(1, 0, 0, 0, 1, 0, 0, 0),
bit_mask(0, 1, 0, 1, 0, 0, 0, 0),
bit_mask(0, 1, 0, 1, 0, 0, 0, 0),
bit_mask(0, 0, 1, 0, 0, 0, 0, 0)
), //v 
c_letter_8(
5,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 1, 0, 0, 0),
bit_mask(1, 0, 0, 0, 1, 0, 0, 0),
bit_mask(1, 0, 1, 0, 1, 0, 0, 0),
bit_mask(1, 0, 1, 0, 1, 0, 0, 0),
bit_mask(0, 1, 0, 1, 0, 0, 0, 0)
), //w 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(0, 1, 1, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0)
), //x 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(0, 1, 1, 1, 0, 0, 0, 0),
bit_mask(0, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0)
), //y 
c_letter_8(
5,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 1, 1, 0, 0, 0),
bit_mask(0, 0, 0, 1, 0, 0, 0, 0),
bit_mask(0, 0, 1, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 1, 1, 0, 0, 0)
), //z 
c_letter_8(
2,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 0, 0, 0, 0, 0, 0)
), //[
c_letter_8(
2,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0)
), //\     /
c_letter_8(
2,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 0, 0, 0, 0, 0, 0)
), //] 
c_letter_8(
3,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 1, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0)
), //^
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 1, 0, 0, 0, 0)
), //_
c_letter_8(
1,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0)
), //`
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 1, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 1, 1, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0)
), //a 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 1, 1, 1, 0, 0, 0, 0)
), //b 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 1, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 1, 1, 0, 0, 0, 0)
), //c 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0)
), //d 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 1, 0, 0, 0, 0)
), //e 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0)
), //f 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 1, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 1, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(0, 1, 1, 1, 0, 0, 0, 0)
), //g 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 1, 1, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0)
), //h 
c_letter_8(
3,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0)
), //i 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 1, 1, 0, 0, 0, 0),
bit_mask(0, 0, 1, 0, 0, 0, 0, 0),
bit_mask(0, 0, 1, 0, 0, 0, 0, 0),
bit_mask(1, 0, 1, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0)
), //j 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0)
), //k 
c_letter_8(
3,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0)
), //l 
c_letter_8(
5,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 0, 1, 1, 0, 0, 0),
bit_mask(1, 0, 1, 0, 1, 0, 0, 0),
bit_mask(1, 0, 1, 0, 1, 0, 0, 0),
bit_mask(1, 0, 0, 0, 1, 0, 0, 0),
bit_mask(1, 0, 0, 0, 1, 0, 0, 0)
), //m 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 1, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 1, 1, 0, 0, 0, 0),
bit_mask(1, 0, 1, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0)
), //n 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 1, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(0, 1, 1, 0, 0, 0, 0, 0)
), //o 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0)
), //p 
c_letter_8(
6,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 1, 1, 1, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 1, 0, 0),
bit_mask(1, 0, 0, 1, 0, 1, 0, 0),
bit_mask(0, 1, 1, 1, 1, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 1, 0, 0)
), //q 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0)
), //r 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 1, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 1, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0)
), //s 
c_letter_8(
5,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 1, 1, 0, 0, 0),
bit_mask(0, 0, 1, 0, 0, 0, 0, 0),
bit_mask(0, 0, 1, 0, 0, 0, 0, 0),
bit_mask(0, 0, 1, 0, 0, 0, 0, 0),
bit_mask(0, 0, 1, 0, 0, 0, 0, 0)
), //t 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(0, 1, 1, 0, 0, 0, 0, 0)
), //u 
c_letter_8(
5,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 1, 0, 0, 0),
bit_mask(1, 0, 0, 0, 1, 0, 0, 0),
bit_mask(0, 1, 0, 1, 0, 0, 0, 0),
bit_mask(0, 1, 0, 1, 0, 0, 0, 0),
bit_mask(0, 0, 1, 0, 0, 0, 0, 0)
), //v 
c_letter_8(
5,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 1, 0, 0, 0),
bit_mask(1, 0, 0, 0, 1, 0, 0, 0),
bit_mask(1, 0, 1, 0, 1, 0, 0, 0),
bit_mask(1, 0, 1, 0, 1, 0, 0, 0),
bit_mask(0, 1, 0, 1, 0, 0, 0, 0)
), //w 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(0, 1, 1, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0)
), //x 
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 0, 1, 0, 0, 0, 0),
bit_mask(0, 1, 1, 1, 0, 0, 0, 0),
bit_mask(0, 0, 0, 1, 0, 0, 0, 0),
bit_mask(1, 1, 1, 0, 0, 0, 0, 0)
), //y 
c_letter_8(
5,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 1, 1, 0, 0, 0),
bit_mask(0, 0, 0, 1, 0, 0, 0, 0),
bit_mask(0, 0, 1, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 1, 1, 1, 0, 0, 0)
), //z 
c_letter_8(
3,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 1, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(1, 1, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 1, 0, 0, 0, 0, 0)
), //{
c_letter_8(
1,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0)
), //|
c_letter_8(
3,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 1, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 0, 0, 0, 0, 0),
bit_mask(1, 0, 0, 0, 0, 0, 0, 0)
), //}
c_letter_8(
4,
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 1, 0, 1, 0, 0, 0, 0),
bit_mask(1, 0, 1, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0),
bit_mask(0, 0, 0, 0, 0, 0, 0, 0)
) //~
};

c_letter_16  holy_font::arial_small[] =
{
c_letter_16(
2,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //!   
c_letter_16(
3,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //"   
c_letter_16(
4,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //#   
c_letter_16(
5,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //$   
c_letter_16(
7,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //%   
c_letter_16(
6,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //&   
c_letter_16(
1,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //'   
c_letter_16(
3,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //(   
c_letter_16(
3,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //)   
c_letter_16(
3,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //*   
c_letter_16(
0,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //    
c_letter_16(
2,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //,   
c_letter_16(
2,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //-   
c_letter_16(
2,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //.   
c_letter_16(
3,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), ///   
c_letter_16(
4,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //0   
c_letter_16(
3,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //1   
c_letter_16(
4,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //2   
c_letter_16(
4,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //3   
c_letter_16(
5,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //4   
c_letter_16(
4,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //5   
c_letter_16(
4,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //6   
c_letter_16(
4,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //7   
c_letter_16(
4,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //8   
c_letter_16(
4,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //9   
c_letter_16(
2,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //:   
c_letter_16(
2,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //;   
c_letter_16(
4,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //<   
c_letter_16(
4,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //=   
c_letter_16(
4,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //>   
c_letter_16(
5,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //?   
c_letter_16(
9,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //@   
c_letter_16(
7,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //A   
c_letter_16(
5,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //B   
c_letter_16(
6,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //C   
c_letter_16(
6,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //D   
c_letter_16(
6,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //E   
c_letter_16(
5,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //F   
c_letter_16(
6,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //G   
c_letter_16(
6,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //H   
c_letter_16(
2,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //I   
c_letter_16(
4,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //J   
c_letter_16(
6,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //K   
c_letter_16(
5,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //L   
c_letter_16(
7,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //M   
c_letter_16(
6,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //N   
c_letter_16(
6,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //O   
c_letter_16(
5,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //P   
c_letter_16(
6,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //Q   
c_letter_16(
6,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //R   
c_letter_16(
5,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //S   
c_letter_16(
5,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //T   
c_letter_16(
6,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //U   
c_letter_16(
7,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //V   
c_letter_16(
9,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //W   
c_letter_16(
5,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //X   
c_letter_16(
6,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //Y   
c_letter_16(
6,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //Z   
c_letter_16(
3,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //[   
c_letter_16(
3,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //\   
c_letter_16(
2,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //]   
c_letter_16(
3,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //^   
c_letter_16(
5,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //_   
c_letter_16(
2,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //`   
c_letter_16(
4,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //a   
c_letter_16(
4,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //b   
c_letter_16(
4,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //c   
c_letter_16(
4,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //d   
c_letter_16(
4,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //e   
c_letter_16(
3,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //f   
c_letter_16(
4,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //g   
c_letter_16(
4,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //h   
c_letter_16(
1,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //i   
c_letter_16(
1,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //j   
c_letter_16(
4,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //k   
c_letter_16(
1,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //l   
c_letter_16(
7,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //m   
c_letter_16(
4,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //n   
c_letter_16(
4,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //o   
c_letter_16(
4,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //p   
c_letter_16(
4,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //q   
c_letter_16(
3,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //r   
c_letter_16(
4,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //s   
c_letter_16(
2,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //t   
c_letter_16(
4,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //u   
c_letter_16(
5,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //v   
c_letter_16(
5,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //w   
c_letter_16(
4,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //x   
c_letter_16(
5,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //y   
c_letter_16(
3,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //z   
c_letter_16(
3,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //{   
c_letter_16(
2,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //|   
c_letter_16(
3,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //}   
c_letter_16(
4,
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
bit_mask_16(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
), //~   

};